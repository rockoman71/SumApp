def label1 = "sumapp-${UUID.randomUUID().toString()}"
def label = "icp-agent"
podTemplate(label: label, 
	containers: [
	  containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
	  containerTemplate(name: 'docker', image: 'docker:stable', ttyEnabled: true, command: 'cat'),
	  containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.0', command: 'cat', ttyEnabled: true)
	],
	volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')]
	) {
	
	node(label) {
		
	  
	  stage('Get Source') {
		git "https://github.com/rockoman71/SumApp.git"
	  }

	  //def props = readProperties  file:'deployment/pipeline.properties'
	  def tag = '0.1.0'
	  //def gitSrc = props['gitSrc']
	  def dockerRegistry = 'https://mycluster.icp:8500'
	  def image = 'mycluster.icp:8500/demo/sumapp'
	  def deployment = 'deployment/sumapp-deploy.yaml'
	  def service = 'deployment/sumapp-svc.yaml'
	  def selector = 'sumapp'
	  def namespace = 'demo'

	    
	  stage('Build Maven project') {
		container('maven') {
			sh "mvn -B clean package"
		}
	  }
	  stage('Build Docker image') {
		container('docker') {
		  docker.withRegistry("${dockerRegistry}", 'icp-id') {
			sh "docker build -t ${image}:${tag} ."
			sh "docker push ${image}:${tag}"
			sh "docker tag ${image}:${tag} ${image}:latest"
			sh "docker push ${image}:latest"
		  }
		}
	  }
	  stage( 'Clean Up Existing Deployments' ) {
		container('kubectl') {
		  withCredentials([[$class: 'UsernamePasswordMultiBinding',
							  credentialsId: 'icp-id',
							  usernameVariable: 'DOCKER_HUB_USER',
							  passwordVariable: 'DOCKER_HUB_PASSWORD']]) {
			  
			  sh "kubectl delete deployments -n ${namespace} --selector=app=${selector}"
		  }
		}
	  }
	  stage( 'Deploy to Cluster' ) {
		container('kubectl') {
		  withCredentials([[$class: 'UsernamePasswordMultiBinding',
							  credentialsId: 'icp-id',
							  usernameVariable: 'DOCKER_HUB_USER',
							  passwordVariable: 'DOCKER_HUB_PASSWORD']]) {
			  
			  sh "kubectl apply -n ${namespace} -f ${deployment}"
			  sh "sleep 5"
			  sh "kubectl apply -n ${namespace} -f ${service}"
		  }
		}
	  }
	}
  }
